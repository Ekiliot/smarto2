const fs = require('fs');
const path = require('path');

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∫–æ–Ω–æ–∫ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ä–∞–∑–º–µ—Ä–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ—Å–Ω–æ–≤–Ω–æ–π PNG –∏–∫–æ–Ω–∫–∏
 * –°–æ–∑–¥–∞–µ—Ç SVG –∏–∫–æ–Ω–∫–∏ —Å —Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞ PNG —Ñ–∞–π–ª—ã
 */

function createSVGIcon(size, pngFilename) {
  return `<svg width="${size}" height="${size}" xmlns="http://www.w3.org/2000/svg">
  <image href="${pngFilename}" width="${size}" height="${size}"/>
</svg>`;
}

function generateIcons() {
  const currentDir = __dirname;
  const projectRoot = path.dirname(currentDir);
  const sourceIcon = path.join(projectRoot, 'icon.png');
  const outputDir = path.join(projectRoot, 'public', 'icons');
  
  // –†–∞–∑–º–µ—Ä—ã –∏–∫–æ–Ω–æ–∫ –¥–ª—è PWA
  const iconSizes = [72, 96, 128, 144, 152, 192, 384, 512];
  
  console.log('üé® –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∫–æ–Ω–æ–∫ Smarto PWA –∏–∑ –Ω–æ–≤–æ–π PNG –∏–∫–æ–Ω–∫–∏...');
  console.log(`üìÅ –ò—Å—Ö–æ–¥–Ω–∞—è –∏–∫–æ–Ω–∫–∞: ${sourceIcon}`);
  console.log(`üìÅ –í—ã—Ö–æ–¥–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: ${outputDir}`);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω–æ–π –∏–∫–æ–Ω–∫–∏
  if (!fs.existsSync(sourceIcon)) {
    console.log(`‚ùå –ò—Å—Ö–æ–¥–Ω–∞—è –∏–∫–æ–Ω–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: ${sourceIcon}`);
    console.log('üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª icon.png –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞');
    return;
  }
  
  try {
    // –°–æ–∑–¥–∞–µ–º –≤—ã—Ö–æ–¥–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    if (!fs.existsSync(outputDir)) {
      fs.mkdirSync(outputDir, { recursive: true });
    }
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∫–æ–Ω–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞
    iconSizes.forEach(size => {
      const pngFilename = `icon-${size}x${size}.png`;
      const svgFilename = `icon-${size}x${size}.svg`;
      
      // –°–æ–∑–¥–∞–µ–º SVG —Å —Å—Å—ã–ª–∫–æ–π –Ω–∞ PNG
      const svgContent = createSVGIcon(size, pngFilename);
      const svgPath = path.join(outputDir, svgFilename);
      
      fs.writeFileSync(svgPath, svgContent);
      console.log(`‚úÖ –°–æ–∑–¥–∞–Ω ${svgFilename}`);
    });
    
    // –°–æ–∑–¥–∞–µ–º apple-touch-icon
    const appleSize = 180;
    const applePngFilename = 'apple-touch-icon.png';
    const appleSvgFilename = 'apple-touch-icon.svg';
    
    const appleSvgContent = createSVGIcon(appleSize, applePngFilename);
    const appleSvgPath = path.join(outputDir, appleSvgFilename);
    
    fs.writeFileSync(appleSvgPath, appleSvgContent);
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω ${appleSvgFilename}`);
    
    // –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π icon.svg
    const mainSvgContent = createSVGIcon(512, '../icon.png');
    const mainSvgPath = path.join(projectRoot, 'public', 'icon.svg');
    
    fs.writeFileSync(mainSvgPath, mainSvgContent);
    console.log('‚úÖ –°–æ–∑–¥–∞–Ω –æ—Å–Ω–æ–≤–Ω–æ–π icon.svg');
    
    console.log('\nüöÄ –í—Å–µ SVG –∏–∫–æ–Ω–∫–∏ —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã!');
    console.log('üìù –¢–µ–ø–µ—Ä—å –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å PNG –≤–µ—Ä—Å–∏–∏ –∏–∫–æ–Ω–æ–∫');
    console.log('üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–Ω–ª–∞–π–Ω –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏–ª–∏ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ —Ä–µ–¥–∞–∫—Ç–æ—Ä—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è PNG');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∫–æ–Ω–æ–∫:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
generateIcons(); 
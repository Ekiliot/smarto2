'use client'

import { useState, useRef, useEffect, useMemo } from 'react'
import { motion, AnimatePresence, PanInfo } from 'framer-motion'
import { X, Heart, MessageCircle, Share2, ShoppingCart, Play, Pause, Volume2, VolumeX } from 'lucide-react'
import { useAuth } from '@/components/AuthProvider'
import { useCart } from '@/components/CartProvider'
import { useWishlist } from '@/components/WishlistProvider'
import { useNotification } from '@/components/NotificationProvider'
import { ReviewMedia, ProductReview } from '@/lib/types/reviews'
import { createReaction, deleteUserReaction, getUserReaction } from '@/lib/supabase/reviews'
import { formatDistanceToNow } from 'date-fns'
import { ru } from 'date-fns/locale'

interface MediaViewerProps {
  isOpen: boolean
  onClose: () => void
  media: ReviewMedia
  review: ProductReview
  productName: string
  allReviews: ProductReview[] // –í—Å–µ –æ—Ç–∑—ã–≤—ã –¥–ª—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
  currentReviewIndex: number // –ò–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–≥–æ –æ—Ç–∑—ã–≤–∞
  onReviewChange: (index: number) => void // –§—É–Ω–∫—Ü–∏—è —Å–º–µ–Ω—ã –æ—Ç–∑—ã–≤–∞
  onOpenComments: (review: any) => void
  allProducts?: any[] // –í—Å–µ —Ç–æ–≤–∞—Ä—ã –¥–ª—è –ø–æ–∫–∞–∑–∞ –ø–æ—Å–ª–µ –æ—Ç–∑—ã–≤–æ–≤
}

export default function MediaViewer({ 
  isOpen, 
  onClose, 
  media, 
  review, 
  productName,
  allReviews,
  currentReviewIndex,
  onReviewChange,
  onOpenComments,
  allProducts
}: MediaViewerProps) {
  console.log('üöÄ MediaViewer –æ–±–Ω–æ–≤–ª–µ–Ω! –í–µ—Ä—Å–∏—è —Å –Ω–æ–≤—ã–º–∏ –ª–æ–≥–∞–º–∏!')
  
  const { user } = useAuth()
  const { addToCart } = useCart()
  const { wishlistItems, addToWishlist, removeFromWishlist, isInWishlist: checkIsInWishlist } = useWishlist()
  const { showNotification } = useNotification()
  const [currentMediaIndex, setCurrentMediaIndex] = useState(0)
  const [isLiked, setIsLiked] = useState(false)
  const [likeCount, setLikeCount] = useState(review.total_likes || 0)

  const [showFullTextModal, setShowFullTextModal] = useState(false)
  const [showFullProductName, setShowFullProductName] = useState(false)
  const [currentProductIndex, setCurrentProductIndex] = useState(0)
  const [isShowingProducts, setIsShowingProducts] = useState(false)
  const [isInitialized, setIsInitialized] = useState(false)
  
  // –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –≤–∏–¥–µ–æ –ø–ª–µ–µ—Ä–∞
  const [isPlaying, setIsPlaying] = useState(false)
  const [isMuted, setIsMuted] = useState(true)
  const [currentTime, setCurrentTime] = useState(0)
  const [duration, setDuration] = useState(0)
  const [showControls, setShowControls] = useState(false)
  
  // –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –¥–≤–æ–π–Ω—ã—Ö —Ç–∞–ø–æ–≤
  const [lastTap, setLastTap] = useState(0)
  const [showHeartAnimation, setShowHeartAnimation] = useState(false)
  const [heartPosition, setHeartPosition] = useState({ x: 0, y: 0 })
  
  const modalRef = useRef<HTMLDivElement>(null)
  const videoRef = useRef<HTMLVideoElement>(null)
  const productVideoRef = useRef<HTMLVideoElement>(null)
  const dragFromButtonsRef = useRef(false)
  const controlsTimeoutRef = useRef<NodeJS.Timeout | null>(null)

  // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –º–µ–¥–∏–∞ —Ñ–∞–π–ª—ã –æ—Ç–∑—ã–≤–∞
  const allMedia = review.media || []
  const currentMedia = allMedia[currentMediaIndex]
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –º–µ–¥–∏–∞ —É –æ—Ç–∑—ã–≤–∞
  const hasMedia = allMedia && allMedia.length > 0
  
  // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –æ—Ç–∑—ã–≤—ã —Å –º–µ–¥–∏–∞
  const reviewsWithMedia = allReviews.filter(review => review.media && review.media.length > 0)
  const hasReviewsWithMedia = reviewsWithMedia.length > 0
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–µ–∫—É—â–∏–π –æ—Ç–∑—ã–≤ –≤–∞–ª–∏–¥–µ–Ω
  const isValidReviewIndex = currentReviewIndex >= 0 && currentReviewIndex < reviewsWithMedia.length
  const shouldShowReview = hasMedia && isValidReviewIndex && review && review.id && !isShowingProducts
  
  // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ç–æ–≤–∞—Ä –∏ –µ–≥–æ –º–µ–¥–∏–∞
  const currentProduct = allProducts?.[currentProductIndex]
  
  console.log('üîç –ü–†–Ø–ú–û –ü–ï–†–ï–î useMemo - currentProduct:', currentProduct?.name)
  
  // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è currentProduct
  console.log('üîç currentProduct debug:', {
    currentProductIndex,
    allProductsLength: allProducts?.length || 0,
    currentProduct: currentProduct ? {
      name: currentProduct.name,
      id: currentProduct.id,
      video_url: currentProduct.video_url,
      image_url: currentProduct.image_url,
      images: currentProduct.images
    } : null,
    hasCurrentProduct: !!currentProduct
  })
  
  // –§–æ—Ä–º–∏—Ä—É–µ–º –º–∞—Å—Å–∏–≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∫–∞–∫ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Ç–æ–≤–∞—Ä–∞, –Ω–æ –≤–∏–¥–µ–æ —Å—Ç–∞–≤–∏–º –ø–µ—Ä–≤—ã–º
  const currentProductImages = useMemo(() => {
    console.log('üîç useMemo —Å—Ä–∞–±–æ—Ç–∞–ª –¥–ª—è currentProductImages:', {
      currentProduct: currentProduct ? currentProduct.name : 'null',
      hasCurrentProduct: !!currentProduct
    })
    
    if (!currentProduct) {
      console.log('‚ùå currentProduct is null, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤')
      return []
    }
    
    const images = [
    currentProduct.image_url, // –ì–ª–∞–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    ...(currentProduct.images || []) // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    ].filter(Boolean) // –£–±–∏—Ä–∞–µ–º –ø—É—Å—Ç—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
    
    console.log('üîç –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ –º–µ–¥–∏–∞ —Ç–æ–≤–∞—Ä–∞:', {
      productName: currentProduct.name,
      video_url: currentProduct.video_url,
      image_url: currentProduct.image_url,
      images: currentProduct.images,
      filteredImages: images,
      hasVideo: !!currentProduct.video_url
    })
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å –≤–∏–¥–µ–æ, —Å—Ç–∞–≤–∏–º –µ–≥–æ –ø–µ—Ä–≤—ã–º
    if (currentProduct.video_url) {
      const result = [currentProduct.video_url, ...images]
      console.log('‚úÖ –í–∏–¥–µ–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –Ω–∞—á–∞–ª–æ:', result)
      return result
    }
    
    console.log('‚ùå –í–∏–¥–µ–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', images)
    return images
  }, [currentProduct?.name, currentProduct?.video_url, currentProduct?.image_url, currentProduct?.images])
  
  const [currentProductMediaIndex, setCurrentProductMediaIndex] = useState(0)

  // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∏–Ω–¥–µ–∫—Å –º–µ–¥–∏–∞ –ø—Ä–∏ —Å–º–µ–Ω–µ —Ç–æ–≤–∞—Ä–∞
  useEffect(() => {
    setCurrentProductMediaIndex(0)
  }, [currentProductIndex])

  // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –æ—Ç–∑—ã–≤–æ–≤
  useEffect(() => {
    if (isOpen && !isShowingProducts) {
      console.log('üîç –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Ç–∑—ã–≤—ã:', {
        currentReviewIndex,
        allReviewsLength: allReviews.length,
        reviewsWithMediaLength: reviewsWithMedia.length,
        hasMedia,
        currentReview: review
      })
    }
  }, [isOpen, isShowingProducts, currentReviewIndex, allReviews.length, reviewsWithMedia.length, hasMedia, review])

  // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–æ–≤
  useEffect(() => {
    console.log('üîÑ –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞ MediaViewer:', {
      isOpen,
      isShowingProducts,
      shouldShowReview,
      hasReviewsWithMedia: reviewsWithMedia.length > 0,
      hasProducts: allProducts && allProducts.length > 0,
      reviewsWithMediaLength: reviewsWithMedia.length,
      allProductsLength: allProducts?.length || 0,
      currentReviewIndex,
      canSwitchToProducts: currentReviewIndex >= reviewsWithMedia.length - 1
    })
  }, [isOpen, isShowingProducts, shouldShowReview, reviewsWithMedia.length, allProducts?.length, currentReviewIndex])

  // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Ç–æ–≤–∞—Ä–∞
  useEffect(() => {
    if (isOpen && isShowingProducts) {
      console.log('üîç –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–≤–∞—Ä—ã:', {
        currentProductIndex,
        allProductsLength: allProducts?.length || 0,
        currentProduct,
        currentProductImages,
        currentProductMediaIndex,
        videoUrl: currentProduct?.video_url,
        hasVideo: !!currentProduct?.video_url
      })
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –≤–∏–¥–µ–æ
      if (allProducts && allProducts.length > 0) {
        console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –≤–∏–¥–µ–æ:')
        allProducts.forEach((product, index) => {
          if (product.video_url) {
            console.log(`‚úÖ –¢–æ–≤–∞—Ä ${index}: ${product.name} - –µ—Å—Ç—å –≤–∏–¥–µ–æ: ${product.video_url}`)
          } else {
            console.log(`‚ùå –¢–æ–≤–∞—Ä ${index}: ${product.name} - –Ω–µ—Ç –≤–∏–¥–µ–æ`)
          }
        })
      }
    }
  }, [isOpen, isShowingProducts, currentProductIndex, allProducts?.length, currentProduct, currentProductImages, currentProductMediaIndex])

  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è currentProductImages
  useEffect(() => {
    if (currentProduct && isShowingProducts) {
      console.log('üîç –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ currentProductImages:', {
        productName: currentProduct.name,
        productId: currentProduct.id,
        video_url: currentProduct.video_url,
        image_url: currentProduct.image_url,
        images: currentProduct.images,
        currentProductImages,
        currentProductImagesLength: currentProductImages.length,
        currentProductMediaIndex
      })
    }
  }, [currentProduct, currentProductImages, currentProductMediaIndex, isShowingProducts])

  // –û—á–∏—Å—Ç–∫–∞ —Ç–∞–π–º–µ—Ä–æ–≤ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    return () => {
      if (controlsTimeoutRef.current) {
        clearTimeout(controlsTimeoutRef.current)
      }
    }
  }, [])

  // –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏–π –≤–∏–¥–µ–æ –ø—Ä–∏ —Å–º–µ–Ω–µ –º–µ–¥–∏–∞
  useEffect(() => {
    setCurrentTime(0)
    setDuration(0)
    setIsPlaying(false)
  }, [currentProductMediaIndex, currentMediaIndex])

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É —Ç–æ–≤–∞—Ä–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
  const hasMultipleProductImages = currentProductImages.length > 1

  const nextProductMedia = () => {
    if (currentProductMediaIndex < currentProductImages.length - 1) {
      setCurrentProductMediaIndex(prev => prev + 1)
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤–∏–¥–µ–æ –ø—Ä–∏ —Å–º–µ–Ω–µ –º–µ–¥–∏–∞
      setCurrentTime(0)
      setDuration(0)
      setIsPlaying(false)
    }
  }

  const prevProductMedia = () => {
    if (currentProductMediaIndex > 0) {
      setCurrentProductMediaIndex(prev => prev - 1)
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤–∏–¥–µ–æ –ø—Ä–∏ —Å–º–µ–Ω–µ –º–µ–¥–∏–∞
      setCurrentTime(0)
      setDuration(0)
      setIsPlaying(false)
    }
  }

  // –£–ø—Ä–∞–≤–ª—è–µ–º —Å–∫—Ä–æ–ª–ª –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏/–∑–∞–∫—Ä—ã—Ç–∏–∏
  useEffect(() => {
    if (isOpen) {
      document.body.style.overflow = 'hidden'
    } else {
      document.body.style.overflow = 'unset'
    }
  }, [isOpen])

  useEffect(() => {
    if (isOpen && user && review.id) {
      loadUserReaction()
    }
  }, [isOpen, user, review.id]) // –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å —Ç–æ–ª—å–∫–æ –æ—Ç ID –æ—Ç–∑—ã–≤–∞ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

  // –û–±–Ω–æ–≤–ª—è–µ–º likeCount –∫–æ–≥–¥–∞ –º–µ–Ω—è–µ—Ç—Å—è –æ—Ç–∑—ã–≤
  useEffect(() => {
    if (review && review.id) {
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –Ω–æ–≤–æ–≥–æ –æ—Ç–∑—ã–≤–∞
      setIsLiked(false)
      setLikeCount(review.total_likes || 0)
      
      console.log('üìä Review changed, updating like state:', {
        reviewId: review.id,
        total_likes: review.total_likes,
        newLikeCount: review.total_likes || 0,
        resettingIsLiked: true
      })
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–µ–∞–∫—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –Ω–æ–≤–æ–≥–æ –æ—Ç–∑—ã–≤–∞
      if (user) {
        loadUserReaction()
      }
    }
  }, [review?.id, user])

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  useEffect(() => {
    if (isOpen && !isInitialized) {
      console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è MediaViewer')
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Ç–∑—ã–≤—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å —Å –º–µ–¥–∏–∞
      if (hasReviewsWithMedia) {
        setIsShowingProducts(false)
        // –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ currentReviewIndex –≤–∞–ª–∏–¥–µ–Ω
        if (currentReviewIndex < 0 || currentReviewIndex >= reviewsWithMedia.length) {
          console.log('–ò—Å–ø—Ä–∞–≤–ª—è–µ–º –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π currentReviewIndex:', currentReviewIndex, '-> 0')
          onReviewChange(0)
        }
      }
      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Ç–æ–≤–∞—Ä–∞–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ—Ç –æ—Ç–∑—ã–≤–æ–≤ —Å –º–µ–¥–∏–∞ –≤–æ–æ–±—â–µ
      else if (!hasReviewsWithMedia && allProducts && allProducts.length > 0) {
        console.log('–ù–µ—Ç –æ—Ç–∑—ã–≤–æ–≤ —Å –º–µ–¥–∏–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–≤–∞—Ä—ã')
        setIsShowingProducts(true)
        setCurrentProductIndex(0)
      }
      setIsInitialized(true)
    } else if (!isOpen) {
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏
      setIsInitialized(false)
    }
  }, [isOpen, isInitialized, hasReviewsWithMedia, allProducts, currentReviewIndex, reviewsWithMedia.length, onReviewChange])

  const loadUserReaction = async () => {
    try {
      if (review.id) {
        console.log('üîÑ Loading user reaction for review:', {
          reviewId: review.id,
          currentLikeCount: likeCount,
          reviewTotalLikes: review.total_likes
        })
        
        const reaction = await getUserReaction(review.id)
        const userLiked = reaction === 'like'
        setIsLiked(userLiked)
        
        // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ª–∞–π–∫–Ω—É–ª, –Ω–æ —Å—á–µ—Ç—á–∏–∫ 0 –∏–ª–∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–∏–Ω–∏–º—É–º 1
        if (userLiked && (!review.total_likes || review.total_likes < 1)) {
          setLikeCount(1)
        }
        
        console.log('‚úÖ User reaction loaded:', {
          reaction,
          isLiked: userLiked,
          reviewTotalLikes: review.total_likes
        })
      }
    } catch (error) {
      console.error('Error loading user reaction:', error)
    }
  }

  const handleLike = async () => {
    if (!user || !review.id) return

    console.log('‚ù§Ô∏è Handle like called:', {
      isLiked,
      currentLikeCount: likeCount,
      reviewId: review.id,
      reviewTotalLikes: review.total_likes
    })

    try {
      if (isLiked) {
        await deleteUserReaction(review.id)
        const newCount = Math.max(0, likeCount - 1)
        setLikeCount(newCount)
        setIsLiked(false)
        console.log('üëé Like removed:', { newCount })
      } else {
        await createReaction({
          review_id: review.id,
          reaction_type: 'like'
        })
        const newCount = likeCount + 1
        setLikeCount(newCount)
        setIsLiked(true)
        console.log('üëç Like added:', { newCount })
      }
    } catch (error) {
      console.error('Error toggling like:', error)
    }
  }

  const handleAddToCart = (product: any) => {
    console.log('üõí handleAddToCart called with product:', product)
    if (product && product.id) {
      addToCart(product.id, 1)
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º iOS-—Å—Ç–∏–ª—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
      showNotification({
        type: 'success',
        title: '–¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É',
        message: product.name,
        icon: 'cart'
      })
      console.log('‚úÖ Product added to cart successfully')
    } else {
      console.error('‚ùå Invalid product:', product)
    }
  }

  const handleWishlistToggle = async (product: any) => {
    console.log('‚ù§Ô∏è handleWishlistToggle called with product:', product)
    if (product && product.id) {
      const isInWishlistNow = checkIsInWishlist(product.id)
      console.log('Is in wishlist check:', { isInWishlistNow, wishlistItems: wishlistItems.length })
      
      try {
        if (isInWishlistNow) {
          await removeFromWishlist(product.id)
          showNotification({
            type: 'info',
            title: '–£–¥–∞–ª–µ–Ω–æ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ',
            message: product.name,
            icon: 'heart'
          })
          console.log('‚úÖ Product removed from wishlist')
        } else {
          await addToWishlist(product.id)
          showNotification({
            type: 'success',
            title: '–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ',
            message: product.name,
            icon: 'heart'
          })
          console.log('‚úÖ Product added to wishlist')
        }
      } catch (error: any) {
        console.error('‚ùå Wishlist error:', error)
        // –ï—Å–ª–∏ —Ç–æ–≤–∞—Ä —É–∂–µ –≤ wishlist (–∫–æ–¥ 23505), —Ç–æ –ø—Ä–æ—Å—Ç–æ –æ–±–Ω–æ–≤–ª—è–µ–º UI
        if (error?.code === '23505') {
          showNotification({
            type: 'info',
            title: '–¢–æ–≤–∞—Ä —É–∂–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º',
            message: product.name,
            icon: 'heart'
          })
        } else {
          showNotification({
            type: 'error',
            title: '–û—à–∏–±–∫–∞',
            message: '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –∏–∑–±—Ä–∞–Ω–Ω–æ–µ'
          })
        }
      }
    } else {
      console.error('‚ùå Invalid product:', product)
    }
  }

  const handleShareProduct = (product: any) => {
    console.log('üîó –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ç–æ–≤–∞—Ä–æ–º:', product.name)
    // –ó–¥–µ—Å—å –º–æ–∂–µ—Ç –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ –¥–ª—è –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Ç–æ–≤–∞—Ä–æ–º
  }

  // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤–∏–¥–µ–æ –ø–ª–µ–µ—Ä–∞
  const handleVideoPlay = () => {
    const video = isShowingProducts ? productVideoRef.current : videoRef.current
    console.log('üé¨ handleVideoPlay –≤—ã–∑–≤–∞–Ω:', {
      isShowingProducts,
      video: !!video,
      isPlaying
    })
    if (video) {
      if (isPlaying) {
        video.pause()
        console.log('‚è∏Ô∏è –í–∏–¥–µ–æ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–æ –Ω–∞ –ø–∞—É–∑—É')
      } else {
        video.play()
        console.log('‚ñ∂Ô∏è –í–∏–¥–µ–æ –∑–∞–ø—É—â–µ–Ω–æ')
      }
      setIsPlaying(!isPlaying)
    }
  }

  const handleVideoMute = () => {
    const video = isShowingProducts ? productVideoRef.current : videoRef.current
    console.log('üîá handleVideoMute –≤—ã–∑–≤–∞–Ω:', {
      isShowingProducts,
      video: !!video,
      isMuted
    })
    if (video) {
      video.muted = !isMuted
      setIsMuted(!isMuted)
      console.log('üîá –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–≤—É–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–æ:', !isMuted ? '–≤—ã–∫–ª—é—á–µ–Ω' : '–≤–∫–ª—é—á–µ–Ω')
    }
  }

  const handleVideoTimeUpdate = () => {
    const video = isShowingProducts ? productVideoRef.current : videoRef.current
    if (video) {
      const newTime = video.currentTime
      const newDuration = video.duration || 0
      if (newTime !== currentTime || newDuration !== duration) {
        setCurrentTime(newTime)
        setDuration(newDuration)
        console.log('‚è±Ô∏è –í—Ä–µ–º—è –≤–∏–¥–µ–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ:', {
          currentTime: newTime,
          duration: newDuration,
          progress: `${((newTime / newDuration) * 100).toFixed(1)}%`
        })
      }
    }
  }

  const handleVideoSeek = (e: React.MouseEvent<HTMLDivElement>) => {
    const video = isShowingProducts ? productVideoRef.current : videoRef.current
    console.log('üéØ handleVideoSeek –≤—ã–∑–≤–∞–Ω:', {
      isShowingProducts,
      video: !!video,
      duration,
      event: e.type
    })
    if (video && duration > 0) {
      const rect = e.currentTarget.getBoundingClientRect()
      const clickX = e.clientX - rect.left
      const newTime = (clickX / rect.width) * duration
      video.currentTime = newTime
      setCurrentTime(newTime)
      console.log('üéØ –í–∏–¥–µ–æ –ø–µ—Ä–µ–º–æ—Ç–∞–Ω–æ –Ω–∞:', {
        clickX,
        rectWidth: rect.width,
        newTime: formatTime(newTime),
        totalDuration: formatTime(duration)
      })
    }
  }

  const showVideoControls = () => {
    setShowControls(true)
    if (controlsTimeoutRef.current) {
      clearTimeout(controlsTimeoutRef.current)
    }
    controlsTimeoutRef.current = setTimeout(() => {
      setShowControls(false)
    }, 3000)
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–≤–æ–π–Ω–æ–≥–æ —Ç–∞–ø–∞
  const handleDoubleTap = (e: React.TouchEvent | React.MouseEvent) => {
    const now = Date.now()
    const timeDiff = now - lastTap

    if (timeDiff < 300 && timeDiff > 0) {
      // –î–≤–æ–π–Ω–æ–π —Ç–∞–ø –æ–±–Ω–∞—Ä—É–∂–µ–Ω
      const rect = e.currentTarget.getBoundingClientRect()
      const x = ('touches' in e ? e.touches[0].clientX : e.clientX) - rect.left
      const y = ('touches' in e ? e.touches[0].clientY : e.clientY) - rect.top

      setHeartPosition({ x, y })
      setShowHeartAnimation(true)

      if (isShowingProducts && currentProduct) {
        // –î–æ–±–∞–≤–ª—è–µ–º –≤ –≤–∏—à–ª–∏—Å—Ç
        handleWishlistToggle(currentProduct)
      } else if (shouldShowReview) {
        // –°—Ç–∞–≤–∏–º –ª–∞–π–∫ –Ω–∞ –æ—Ç–∑—ã–≤
        handleLike()
      }

      setTimeout(() => setShowHeartAnimation(false), 1000)
    }

    setLastTap(now)
  }

  const formatTime = (time: number) => {
    const minutes = Math.floor(time / 60)
    const seconds = Math.floor(time % 60)
    return `${minutes}:${seconds.toString().padStart(2, '0')}`
  }

  const handleCopyReviewLink = (reviewUrl: string) => {
    if (typeof navigator !== 'undefined' && navigator.clipboard && typeof window !== 'undefined') {
      navigator.clipboard.writeText(reviewUrl).then(() => {
        showNotification({
          type: 'success',
          title: '–°—Å—ã–ª–∫–∞ –Ω–∞ –æ—Ç–∑—ã–≤ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞',
          message: '–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å –æ—Ç–∑—ã–≤–æ–º —Å –¥—Ä—É–∑—å—è–º–∏',
          icon: 'check'
        })
      }).catch(() => {
        showNotification({
          type: 'error',
          title: '–û—à–∏–±–∫–∞',
          message: '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É'
        })
      })
    }
  }

  const handleShareReview = () => {
    if (review && review.id) {
      const reviewUrl = `${window.location.origin}/product/${review.product_id}#review-${review.id}`
      handleCopyReviewLink(reviewUrl)
    }
  }

  const isInWishlist = (product: any) => {
    if (!product || !product.id) {
      console.log('‚ùå isInWishlist: invalid product', product)
      return false
    }
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ WishlistProvider
    const result = checkIsInWishlist(product.id)
    console.log('üîç isInWishlist check:', {
      productId: product.id,
      productName: product.name,
      result,
      wishlistCount: wishlistItems.length,
      usingProviderFunction: true
    })
    
    return result
  }

  const calculateDiscount = (originalPrice: number, newPrice: number) => {
    if (originalPrice && newPrice && originalPrice > newPrice) {
      return Math.round(((originalPrice - newPrice) / originalPrice) * 100)
    }
    return 0
  }

  const nextMedia = () => {
    if (currentMediaIndex < allMedia.length - 1) {
      setCurrentMediaIndex(prev => prev + 1)
    }
  }

  const prevMedia = () => {
    if (currentMediaIndex > 0) {
      setCurrentMediaIndex(prev => prev - 1)
    }
  }

  const handleDragEnd = (event: any, info: PanInfo) => {
    if (dragFromButtonsRef.current) {
      dragFromButtonsRef.current = false
      return
    }
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –Ω–∞—á–∞–ª–æ—Å—å –ª–∏ —Å–æ–±—ã—Ç–∏–µ drag –∏–∑ –æ–±–ª–∞—Å—Ç–∏ –∫–Ω–æ–ø–æ–∫
    const target = event.target as HTMLElement
    const isButtonOrChild = target.closest('button') || 
                           target.closest('[data-action-buttons]') ||
                           target.closest('[data-no-drag]') ||
                           target.tagName === 'BUTTON'
    
    if (isButtonOrChild) {
      dragFromButtonsRef.current = false
      return
    }

    // –¢–∞–∫–∂–µ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—á–µ–Ω—å –º–∞–ª–µ–Ω—å–∫–∏–µ –¥–≤–∏–∂–µ–Ω–∏—è (–≤–æ–∑–º–æ–∂–Ω—ã–µ —Å–ª—É—á–∞–π–Ω—ã–µ –∫–ª–∏–∫–∏)
    if (Math.abs(info.offset.y) < 10 && Math.abs(info.offset.x) < 10) {
      console.log('üö´ Drag ignored - too small movement')
      return
    }

    console.log('Drag ended:', {
      offsetY: info.offset.y,
      isShowingProducts,
      currentReviewIndex,
      allReviewsLength: allReviews.length,
      reviewsWithMediaLength: reviewsWithMedia.length,
      currentProductIndex,
      allProductsLength: allProducts?.length,
      hasMedia,
      dragSource: target.tagName
    })

    // –ï—Å–ª–∏ –Ω–µ—Ç –æ—Ç–∑—ã–≤–æ–≤ —Å –º–µ–¥–∏–∞, –Ω–æ –µ—Å—Ç—å —Ç–æ–≤–∞—Ä—ã - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–≤–∞—Ä—ã
    if (!isShowingProducts && !hasReviewsWithMedia && allProducts && allProducts.length > 0) {
      console.log('–ù–µ—Ç –æ—Ç–∑—ã–≤–æ–≤ —Å –º–µ–¥–∏–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–≤–∞—Ä—ã!')
      setIsShowingProducts(true)
      setCurrentProductIndex(0)
      return
    }

    if (isShowingProducts) {
      // –ï—Å–ª–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–≤–∞—Ä—ã
      if (info.offset.y < -50 && currentProductIndex < (allProducts?.length || 0) - 1) {
        // –°–≤–∞–π–ø –≤–≤–µ—Ä—Ö - —Å–ª–µ–¥—É—é—â–∏–π —Ç–æ–≤–∞—Ä
        setCurrentProductIndex(prev => prev + 1)
      } else if (info.offset.y > 50 && currentProductIndex > 0) {
        // –°–≤–∞–π–ø –≤–Ω–∏–∑ - –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–æ–≤–∞—Ä
        setCurrentProductIndex(prev => prev - 1)
      } else if (info.offset.y > 50 && currentProductIndex === 0) {
        // –°–≤–∞–π–ø –≤–Ω–∏–∑ –Ω–∞ –ø–µ—Ä–≤–æ–º —Ç–æ–≤–∞—Ä–µ - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –æ—Ç–∑—ã–≤–∞–º
        if (hasReviewsWithMedia) {
          console.log('–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –æ—Ç–∑—ã–≤–∞–º!')
          setIsShowingProducts(false)
          onReviewChange(reviewsWithMedia.length - 1) // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É –æ—Ç–∑—ã–≤—É —Å –º–µ–¥–∏–∞
        }
      } else if (info.offset.y > 120) {
        // –°–≤–∞–π–ø –≤–Ω–∏–∑ —Å–∏–ª—å–Ω–æ - –∑–∞–∫—Ä—ã—Ç—å
        onClose()
      }
    } else {
      // –ï—Å–ª–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Ç–∑—ã–≤—ã (—Ç–æ–ª—å–∫–æ —Å –º–µ–¥–∏–∞)
      if (info.offset.y < -50 && currentReviewIndex < reviewsWithMedia.length - 1) {
        // –°–≤–∞–π–ø –≤–≤–µ—Ä—Ö - —Å–ª–µ–¥—É—é—â–∏–π –æ—Ç–∑—ã–≤ —Å –º–µ–¥–∏–∞
        onReviewChange(currentReviewIndex + 1)
      } else if (info.offset.y > 50 && currentReviewIndex > 0) {
        // –°–≤–∞–π–ø –≤–Ω–∏–∑ - –ø—Ä–µ–¥—ã–¥—É—â–∏–π –æ—Ç–∑—ã–≤ —Å –º–µ–¥–∏–∞
        onReviewChange(currentReviewIndex - 1)
      } else if (info.offset.y < -50 && currentReviewIndex >= reviewsWithMedia.length - 1 && allProducts && allProducts.length > 0) {
        // –ü–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ—Ç–∑—ã–≤–∞ —Å –º–µ–¥–∏–∞ - –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Ç–æ–≤–∞—Ä–∞–º
        console.log('–ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Ç–æ–≤–∞—Ä–∞–º!')
        setIsShowingProducts(true)
        setCurrentProductIndex(0)
      } else if (info.offset.y > 120) {
        // –°–≤–∞–π–ø –≤–Ω–∏–∑ —Å–∏–ª—å–Ω–æ - –∑–∞–∫—Ä—ã—Ç—å
        onClose()
      }
    }
  }

  const handleClose = () => {
    onClose()
    setCurrentMediaIndex(0)
    setCurrentProductMediaIndex(0)
    setIsShowingProducts(false)
    setCurrentProductIndex(0)
    setIsInitialized(false)
  }

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –º–µ–¥–∏–∞ –∏–ª–∏ —Ç–æ–≤–∞—Ä—ã
  if (!shouldShowReview && !isShowingProducts) return null

  return (
    <>
      <AnimatePresence>
        {isOpen && (
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            className="fixed inset-0 z-50 bg-black"
            onClick={handleClose}
          >
            <motion.div
              ref={modalRef}
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              exit={{ opacity: 0 }}
              transition={{ duration: 0.3 }}
              drag="y"
              dragConstraints={{ top: 0, bottom: 0 }}
              dragElastic={0.1}
              dragDirectionLock
              style={{ touchAction: 'pan-y' }}
              onPointerDownCapture={(e) => {
                const target = e.target as HTMLElement
                const isButtons = !!(target.closest('button') || target.closest('[data-action-buttons]') || target.closest('[data-no-drag]'))
                dragFromButtonsRef.current = isButtons
                // –ü–æ–ª–Ω–æ—Å—Ç—å—é –±–ª–æ–∫–∏—Ä—É–µ–º drag –µ—Å–ª–∏ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –∏–∑ –æ–±–ª–∞—Å—Ç–∏ –∫–Ω–æ–ø–æ–∫
                if (isButtons) {
                  e.stopPropagation()
                  e.preventDefault()
                }
              }}
              onDragEnd={handleDragEnd}
              className="relative w-full h-full bg-black"
              onClick={(e) => e.stopPropagation()}
            >
              {/* –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã—Ö —Å–≤–∞–π–ø–æ–≤ –ø–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º —Ç–æ–≤–∞—Ä–∞ */}
              {isShowingProducts && currentProduct && hasMultipleProductImages && (
                <motion.div
                  drag="x"
                  dragConstraints={{ left: -100, right: 100 }}
                  dragElastic={0.2}
                  dragPropagation={true}
                  onDragEnd={(event, info) => {
                    if (info.offset.x < -50 && currentProductMediaIndex < currentProductImages.length - 1) {
                      nextProductMedia()
                    } else if (info.offset.x > 50 && currentProductMediaIndex > 0) {
                      prevProductMedia()
                    }
                  }}
                  className="absolute inset-0 z-10"
                />
              )}
              {/* –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è */}
              <button
                onClick={handleClose}
                className="absolute top-3 sm:top-6 right-3 sm:right-6 z-20 p-2 sm:p-3 bg-black/50 rounded-full text-white hover:bg-white/20 transition-colors"
              >
                <X className="w-6 h-6" />
              </button>

              {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Ç–∏–ø–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ */}
              <div className="absolute top-3 sm:top-6 left-1/2 transform -translate-x-1/2 z-20">
                <div className="bg-black/50 rounded-full px-3 sm:px-4 py-1.5 sm:py-2 text-white text-xs sm:text-sm font-medium">
                  {isShowingProducts ? '–¢–æ–≤–∞—Ä—ã' : '–û—Ç–∑—ã–≤—ã'}
                </div>
              </div>

              {/* –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è */}
              <button
                onClick={() => {
                  if (isShowingProducts) {
                    setIsShowingProducts(false)
                    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –ø–µ—Ä–≤–æ–º—É –æ—Ç–∑—ã–≤—É
                    if (reviewsWithMedia.length > 0) {
                      onReviewChange(0)
                    }
                  } else {
                    setIsShowingProducts(true)
                    setCurrentProductIndex(0)
                  }
                }}
                className="absolute top-3 sm:top-6 left-3 sm:left-6 z-20 p-2 sm:p-3 bg-black/50 rounded-full text-white hover:bg-white/20 transition-colors"
                title="–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º"
              >
                {isShowingProducts ? 'üìù' : 'üõí'}
              </button>

              {/* –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä */}
              <div className="absolute top-16 sm:top-20 left-1/2 transform -translate-x-1/2 z-20">
                <div className="bg-black/30 rounded-full h-1 w-24 sm:w-32 overflow-hidden">
                  <div 
                    className="bg-white h-full transition-all duration-300"
                    style={{ 
                      width: isShowingProducts 
                        ? `${((currentProductIndex + 1) / (allProducts?.length || 1)) * 100}%`
                        : `${((currentReviewIndex + 1) / (reviewsWithMedia.length || 1)) * 100}%`
                    }}
                  />
                </div>
              </div>

              {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
              <div 
                className="relative w-full h-full flex items-center justify-center p-4 bg-gray-900"
                onTouchStart={handleDoubleTap}
                onMouseDown={handleDoubleTap}
                onClick={showVideoControls}
              >
                {isShowingProducts ? (
                  /* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–≤–∞—Ä */
                  currentProduct && (
                    <>
                      {/* –ü—Ä–æ–≤–µ—Ä—è–µ–º —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—É—â–µ–µ –º–µ–¥–∏–∞ –≤–∏–¥–µ–æ */}
                      {(() => {
                        const currentMedia = currentProductImages[currentProductMediaIndex]
                        const isVideo = currentProduct.video_url && currentProductMediaIndex === 0
                        
                        console.log('üé¨ –†–µ–Ω–¥–µ—Ä –º–µ–¥–∏–∞ —Ç–æ–≤–∞—Ä–∞:', {
                          currentMedia,
                          currentProductMediaIndex,
                          isVideo,
                          videoUrl: currentProduct.video_url,
                          totalMedia: currentProductImages.length,
                          currentProductImages,
                          productName: currentProduct.name
                        })
                        
                        if (isVideo) {
                          console.log('‚úÖ –†–µ–Ω–¥–µ—Ä–∏–º –≤–∏–¥–µ–æ —Ç–æ–≤–∞—Ä–∞')
                          return (
                            <div className="relative max-w-full max-h-full">
                              <video
                                ref={productVideoRef}
                                src={currentMedia}
                                className="max-w-full max-h-full object-contain rounded-lg shadow-2xl"
                                autoPlay
                                loop
                                muted={isMuted}
                                onTimeUpdate={handleVideoTimeUpdate}
                                onLoadedMetadata={handleVideoTimeUpdate}
                                onPlay={() => setIsPlaying(true)}
                                onPause={() => setIsPlaying(false)}
                                onEnded={() => setIsPlaying(false)}
                                onClick={showVideoControls}
                              />
                            </div>
                          )
                        } else {
                          console.log('üñºÔ∏è –†–µ–Ω–¥–µ—Ä–∏–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞')
                          return (
                      <motion.img
                              src={currentMedia}
                        alt={currentProduct.name}
                        className="max-w-full max-h-full object-contain rounded-lg shadow-2xl"
                        drag="x"
                        dragConstraints={{ left: 0, right: 0 }}
                        dragElastic={0.2}
                        dragPropagation={true}
                        onDragEnd={(event, info) => {
                          if (info.offset.x < -50 && currentProductMediaIndex < currentProductImages.length - 1) {
                            nextProductMedia()
                          } else if (info.offset.x > 50 && currentProductMediaIndex > 0) {
                            prevProductMedia()
                          }
                        }}
                      />
                          )
                        }
                      })()}

                      {/* –¢–æ–ª—å–∫–æ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å–∫–∏–¥–∫–∏ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏ (–±–µ–∑ —Ü–µ–Ω—ã) */}
                      {(() => {
                        const hasDiscount = currentProduct.original_price && currentProduct.original_price > currentProduct.price
                        console.log('Discount indicator check:', {
                          productName: currentProduct.name,
                          original_price: currentProduct.original_price,
                          price: currentProduct.price,
                          hasDiscount,
                          discount: hasDiscount ? calculateDiscount(currentProduct.original_price, currentProduct.price) : null
                        })
                        return hasDiscount // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å —Ä–µ–∞–ª—å–Ω–∞—è —Å–∫–∏–¥–∫–∞
                      })() && (
                        <div className="absolute top-3 sm:top-6 left-3 sm:left-6 z-20">
                          <div className="bg-red-500 text-white px-2 sm:px-3 py-1 rounded-full text-xs sm:text-sm font-bold shadow-lg">
                            -{calculateDiscount(currentProduct.original_price, currentProduct.price)}%
                          </div>
                        </div>
                      )}

                      {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞ */}
                      {hasMultipleProductImages && (
                        <>
                          {currentProductMediaIndex > 0 && (
                            <button
                              onClick={prevProductMedia}
                              className="absolute left-3 sm:left-6 top-1/2 transform -translate-y-1/2 p-2 sm:p-3 bg-black/50 rounded-full text-white hover:bg-white/20 transition-colors z-20"
                            >
                              <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 19l-7-7 7-7" />
                              </svg>
                            </button>
                          )}
                          {currentProductMediaIndex < currentProductImages.length - 1 && (
                            <button
                              onClick={nextProductMedia}
                              className="absolute right-3 sm:right-6 top-1/2 transform -translate-y-1/2 p-2 sm:p-3 bg-black/50 rounded-full text-white hover:bg-white/20 transition-colors z-20"
                            >
                              <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5l7 7-7 7" />
                              </svg>
                            </button>
                          )}
                        </>
                      )}

                      {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞ */}
                      {hasMultipleProductImages && (
                        <div className="absolute bottom-32 sm:bottom-60 left-1/2 transform -translate-x-1/2 flex gap-2 z-20">
                          {currentProductImages.map((media: any, index: number) => {
                            const isVideo = currentProduct.video_url && index === 0
                            console.log(`üîç –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –º–µ–¥–∏–∞ ${index}:`, {
                              media,
                              isVideo,
                              videoUrl: currentProduct.video_url
                            })
                            return (
                            <div
                              key={index}
                              className={`w-2 h-2 rounded-full transition-colors ${
                                index === currentProductMediaIndex ? 'bg-white' : 'bg-white/50'
                              }`}
                                title={isVideo ? '–í–∏–¥–µ–æ' : '–§–æ—Ç–æ'}
                              >
                                {isVideo && index === currentProductMediaIndex && (
                                  <div className="w-full h-full bg-red-500 rounded-full animate-pulse" />
                                )}
                              </div>
                            )
                          })}
                        </div>
                      )}
                    </>
                  )
                ) : (
                  /* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Ç–∑—ã–≤ */
                  shouldShowReview ? (
                    <>
                      {currentMedia.media_type === 'image' ? (
                        <img
                          src={currentMedia.media_url}
                          alt="Review media"
                          className="max-w-full max-h-full object-contain rounded-lg shadow-2xl"
                        />
                      ) : (
                        <div className="relative max-w-full max-h-full">
                        <video
                          ref={videoRef}
                          src={currentMedia.media_url}
                          className="max-w-full max-h-full object-contain rounded-lg shadow-2xl"
                          autoPlay
                          loop
                            muted={isMuted}
                            onTimeUpdate={handleVideoTimeUpdate}
                            onLoadedMetadata={handleVideoTimeUpdate}
                            onPlay={() => setIsPlaying(true)}
                            onPause={() => setIsPlaying(false)}
                            onEnded={() => setIsPlaying(false)}
                            onClick={showVideoControls}
                          />
                          

                        </div>
                      )}

                      {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –º–µ–¥–∏–∞ –æ—Ç–∑—ã–≤–∞ */}
                      {allMedia.length > 1 && (
                        <>
                          {currentMediaIndex > 0 && (
                            <button
                              onClick={prevMedia}
                              className="absolute left-3 sm:left-6 top-1/2 transform -translate-y-1/2 p-2 sm:p-3 bg-black/50 rounded-full text-white hover:bg-white/20 transition-colors"
                            >
                              <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 19l-7-7 7-7" />
                              </svg>
                            </button>
                          )}
                          {currentMediaIndex < allMedia.length - 1 && (
                            <button
                              onClick={nextMedia}
                              className="absolute right-3 sm:right-6 top-1/2 transform -translate-y-1/2 p-2 sm:p-3 bg-black/50 rounded-full text-white hover:bg-white/20 transition-colors"
                            >
                              <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5l7 7-7 7" />
                              </svg>
                            </button>
                          )}
                        </>
                      )}

                      {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –º–µ–¥–∏–∞ –æ—Ç–∑—ã–≤–∞ */}
                      {allMedia.length > 1 && (
                        <div className="absolute bottom-32 sm:bottom-60 left-1/2 transform -translate-x-1/2 flex gap-2">
                          {allMedia.map((_, index) => (
                            <div
                              key={index}
                              className={`w-2 h-2 rounded-full transition-colors ${
                                index === currentMediaIndex ? 'bg-white' : 'bg-white/50'
                              }`}
                            />
                          ))}
                        </div>
                      )}
                    </>
                  ) : null
                )}
              </div>

              {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è - TikTok —Å—Ç–∏–ª—å */}
              <div className="absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/90 via-black/50 to-transparent p-3 sm:p-6">
                {isShowingProducts ? (
                  /* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ */
                  currentProduct && (
                    <>
                      {/* –¶–µ–Ω—ã –∏ —Å–∫–∏–¥–∫–∞ */}
                      <div className="mb-4">
                        {currentProduct.original_price && currentProduct.original_price > currentProduct.price && (
                          <>
                            {/* –°–∫–∏–¥–∫–∞ —Å–≤–µ—Ä—Ö—É */}
                            <div className="mb-2">
                              <span className="text-red-400 text-sm font-medium bg-red-900/30 px-3 py-1 rounded-full">
                                -{Math.round(((currentProduct.original_price - currentProduct.price) / currentProduct.original_price) * 100)}%
                              </span>
                            </div>
                            {/* –ü–µ—Ä–µ—á–µ—Ä–∫–Ω—É—Ç–∞—è —Ü–µ–Ω–∞ –≤—ã—à–µ –Ω–æ–≤–æ–π */}
                            <div className="mb-2">
                              <span className="text-white/70 text-lg line-through">
                                {currentProduct.original_price} MDL
                              </span>
                            </div>
                            {/* –ù–æ–≤–∞—è —Ü–µ–Ω–∞ */}
                            <div>
                              <p className="text-white font-bold text-2xl">
                                {currentProduct.price} MDL
                              </p>
                            </div>
                          </>
                        )}
                        {(!currentProduct.original_price || currentProduct.original_price <= currentProduct.price) && (
                          <div>
                            <p className="text-white font-bold text-2xl">
                              {currentProduct.price} MDL
                            </p>
                          </div>
                        )}
                      </div>

                      {/* –ù–∞–∑–≤–∞–Ω–∏–µ –∏ –±—Ä–µ–Ω–¥ —Ç–æ–≤–∞—Ä–∞ */}
                      <div className="mb-4">
                        <div className="relative">
                          <p className="text-white font-semibold text-lg line-clamp-2 pr-20">
                          {currentProduct.name}
                        </p>
                          {currentProduct.name.length > 50 && (
                            <button
                              onClick={() => setShowFullProductName(!showFullProductName)}
                              className="absolute top-6 right-0 text-blue-400 hover:text-blue-300 text-sm font-medium transition-colors"
                            >
                              {showFullProductName ? '–°–∫—Ä—ã—Ç—å' : '–ü–æ–∫–∞–∑–∞—Ç—å'}
                            </button>
                          )}
                          {showFullProductName && (
                            <p className="text-white font-semibold text-lg mt-2">
                              {currentProduct.name}
                            </p>
                          )}
                        </div>
                        {currentProduct.brand && (
                          <p className="text-white/70 text-sm">
                            {currentProduct.brand}
                          </p>
                        )}
                      </div>

                      {/* –ö–∞—Å—Ç–æ–º–Ω—ã–π –ø–ª–µ–µ—Ä –¥–ª—è –≤–∏–¥–µ–æ —Ç–æ–≤–∞—Ä–∞ */}
                      {currentProduct.video_url && (
                        <div className="mt-4">
                          {/* –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä */}
                          <div 
                            className="w-full h-2 bg-white/30 rounded-full cursor-pointer mb-3"
                            onClick={handleVideoSeek}
                          >
                            <div 
                              className="h-full bg-white rounded-full transition-all duration-100"
                              style={{ width: `${(currentTime / duration) * 100}%` }}
                            />
                          </div>
                          
                          {/* –ö–æ–Ω—Ç—Ä–æ–ª—ã */}
                          <div className="flex items-center justify-between text-white">
                            <div className="flex items-center space-x-4">
                              {/* –ö–Ω–æ–ø–∫–∞ Play/Pause */}
                              <button
                                onClick={handleVideoPlay}
                                className="p-2 hover:bg-white/20 rounded-full transition-colors"
                              >
                                {isPlaying ? (
                                  <Pause className="w-5 h-5" />
                                ) : (
                                  <Play className="w-5 h-5" />
                                )}
                              </button>
                              
                              {/* –ö–Ω–æ–ø–∫–∞ Mute */}
                              <button
                                onClick={handleVideoMute}
                                className="p-2 hover:bg-white/20 rounded-full transition-colors"
                              >
                                {isMuted ? (
                                  <VolumeX className="w-5 h-5" />
                                ) : (
                                  <Volume2 className="w-5 h-5" />
                                )}
                              </button>
                              
                              {/* –¢–∞–π–º–∏–Ω–≥ */}
                              <span className="text-sm">
                                {formatTime(currentTime)} / {formatTime(duration)}
                              </span>
                            </div>
                          </div>
                        </div>
                      )}
                    </>
                  )
                ) : (
                  /* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—Ç–∑—ã–≤–µ */
                  shouldShowReview ? (
                    <>
                      <div className="flex items-center gap-2 sm:gap-3 mb-3 sm:mb-4">
                        <div className="w-10 h-10 sm:w-12 sm:h-12 bg-gray-200 dark:bg-gray-700 rounded-full flex items-center justify-center overflow-hidden">
                          {review.user?.image_url ? (
                            <img
                              src={review.user.image_url}
                              alt="Profile"
                              className="w-full h-full object-cover"
                            />
                          ) : (
                            <span className="text-base font-medium text-gray-600 dark:text-gray-400">
                              {review.user?.first_name?.[0] || review.user?.last_name?.[0] || review.user?.email?.[0] || 'U'}
                            </span>
                          )}
                        </div>
                        <div className="flex-1">
                          <p className="text-white font-semibold text-base sm:text-lg">
                            {review.user?.first_name && review.user?.last_name 
                              ? `${review.user.first_name} ${review.user.last_name}` 
                              : review.user?.email}
                          </p>
                          <p className="text-white/70 text-sm">
                            {formatDistanceToNow(new Date(review.created_at), { 
                              addSuffix: true, 
                              locale: ru 
                            })}
                          </p>
                        </div>
                      </div>

                      {/* –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞ */}
                      <div className="mb-3 sm:mb-4">
                        <p className="text-white text-sm sm:text-base leading-relaxed max-w-md break-words overflow-hidden line-clamp-2">
                          {review.text}
                        </p>
                        {review.text.length > 150 && (
                          <button
                            onClick={() => setShowFullTextModal(true)}
                            className="text-blue-400 hover:text-blue-300 text-xs sm:text-sm font-medium mt-2 transition-colors"
                          >
                            –°–º–æ—Ç—Ä–µ—Ç—å –µ—â–µ
                          </button>
                        )}
                      </div>

                      {/* –ö–∞—Å—Ç–æ–º–Ω—ã–π –ø–ª–µ–µ—Ä –¥–ª—è –≤–∏–¥–µ–æ –æ—Ç–∑—ã–≤–∞ (–∫–∞–∫ —É —Ç–æ–≤–∞—Ä–æ–≤) */}
                      {currentMedia.media_type === 'video' && (
                        <div className="mt-4">
                          {/* –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä */}
                          <div 
                            className="w-full h-2 bg-white/30 rounded-full cursor-pointer mb-3"
                            onClick={handleVideoSeek}
                          >
                            <div 
                              className="h-full bg-white rounded-full transition-all duration-100"
                              style={{ width: `${(currentTime / duration) * 100}%` }}
                            />
                          </div>
                          {/* –ö–æ–Ω—Ç—Ä–æ–ª—ã */}
                          <div className="flex items-center justify-between text-white">
                            <div className="flex items-center space-x-4">
                              {/* –ö–Ω–æ–ø–∫–∞ Play/Pause */}
                              <button
                                onClick={handleVideoPlay}
                                className="p-2 hover:bg-white/20 rounded-full transition-colors"
                              >
                                {isPlaying ? (
                                  <Pause className="w-5 h-5" />
                                ) : (
                                  <Play className="w-5 h-5" />
                                )}
                              </button>
                              {/* –ö–Ω–æ–ø–∫–∞ Mute */}
                              <button
                                onClick={handleVideoMute}
                                className="p-2 hover:bg-white/20 rounded-full transition-colors"
                              >
                                {isMuted ? (
                                  <VolumeX className="w-5 h-5" />
                                ) : (
                                  <Volume2 className="w-5 h-5" />
                                )}
                              </button>
                              {/* –¢–∞–π–º–∏–Ω–≥ */}
                              <span className="text-sm">
                                {formatTime(currentTime)} / {formatTime(duration)}
                              </span>
                            </div>
                          </div>
                        </div>
                      )}



                    </>
                  ) : null
                )}
              </div>

              {/* –£–±—Ä–∞–Ω–∞ –∑–æ–Ω–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ drag, —á—Ç–æ–±—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π —Å–∫—Ä–æ–ª–ª */}

              {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π —Å–ø—Ä–∞–≤–∞ - TikTok —Å—Ç–∏–ª—å —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –≤–∏–¥–∏–º–æ—Å—Ç—å—é */}
              <div 
                className="absolute right-2 sm:right-4 bottom-32 sm:bottom-64 flex flex-col items-center gap-3 sm:gap-4 pr-1 z-30"
                data-action-buttons="true"
                data-no-drag="true"
                onPointerDown={(e) => {
                  e.stopPropagation()
                  e.preventDefault()
                }}
                onTouchStart={(e) => {
                  e.stopPropagation()
                  e.preventDefault()
                }}
                style={{ touchAction: 'none' }}
              >
                {isShowingProducts ? (
                  /* –ö–Ω–æ–ø–∫–∏ –¥–ª—è —Ç–æ–≤–∞—Ä–∞ */
                  currentProduct && (
                    <>
                      {/* –í –∫–æ—Ä–∑–∏–Ω—É */}
                      <button
                        onClick={(e) => {
                          e.stopPropagation()
                          e.preventDefault()
                          console.log('üõí Cart button clicked, currentProduct:', currentProduct)
                          handleAddToCart(currentProduct)
                        }}
                        onMouseDown={(e) => e.stopPropagation()}
                        onTouchStart={(e) => e.stopPropagation()}
                        onDragStart={(e) => e.preventDefault()}
                        onDrag={(e) => e.preventDefault()}
                        data-no-drag="true"
                        className="flex flex-col items-center justify-center p-2 sm:p-3 bg-black/40 backdrop-blur-sm rounded-2xl border border-white/20 text-white hover:bg-black/60 hover:scale-110 transition-all duration-200 shadow-lg w-12 h-12 sm:w-14 sm:h-14"
                        style={{ touchAction: 'none' }}
                      >
                        <ShoppingCart className="w-6 h-6 sm:w-7 sm:h-7" />
                      </button>

                      {/* –í–∏—à–ª–∏—Å—Ç */}
                      <button
                        onClick={(e) => {
                          e.stopPropagation()
                          e.preventDefault()
                          console.log('‚ù§Ô∏è Wishlist button clicked, currentProduct:', currentProduct)
                          handleWishlistToggle(currentProduct)
                        }}
                        onMouseDown={(e) => e.stopPropagation()}
                        onTouchStart={(e) => e.stopPropagation()}
                        onDragStart={(e) => e.preventDefault()}
                        onDrag={(e) => e.preventDefault()}
                        data-no-drag="true"
                        className={`flex flex-col items-center justify-center p-2 sm:p-3 backdrop-blur-sm rounded-2xl border transition-all duration-200 shadow-lg hover:scale-110 w-12 h-12 sm:w-14 sm:h-14 ${
                          isInWishlist(currentProduct)
                            ? 'bg-red-500/80 border-red-400/50 text-white'
                            : 'bg-black/40 border-white/20 text-white hover:bg-black/60'
                        }`}
                        style={{ touchAction: 'none' }}
                      >
                        <Heart className={`w-6 h-6 sm:w-7 sm:h-7 ${isInWishlist(currentProduct) ? 'fill-current' : ''}`} />
                      </button>

                      {/* –ü–æ–¥–µ–ª–∏—Ç—å—Å—è */}
                      <button
                        onClick={(e) => {
                          e.stopPropagation()
                          e.preventDefault()
                          console.log('üì§ Share button clicked, currentProduct:', currentProduct)
                          handleShareProduct(currentProduct)
                        }}
                        onMouseDown={(e) => e.stopPropagation()}
                        onTouchStart={(e) => e.stopPropagation()}
                        onDragStart={(e) => e.preventDefault()}
                        onDrag={(e) => e.preventDefault()}
                        data-no-drag="true"
                        className="flex flex-col items-center justify-center p-2 sm:p-3 bg-black/40 backdrop-blur-sm rounded-2xl border border-white/20 text-white hover:bg-black/60 hover:scale-110 transition-all duration-200 shadow-lg w-12 h-12 sm:w-14 sm:h-14"
                        style={{ touchAction: 'none' }}
                      >
                        <Share2 className="w-6 h-6 sm:w-7 sm:h-7" />
                      </button>
                    </>
                  )
                ) : (
                  /* –ö–Ω–æ–ø–∫–∏ –¥–ª—è –æ—Ç–∑—ã–≤–∞ */
                  shouldShowReview && (
                    <>
                      {/* –õ–∞–π–∫ */}
                      <button
                        onClick={(e) => {
                          e.stopPropagation()
                          e.preventDefault()
                          handleLike()
                        }}
                        onMouseDown={(e) => e.stopPropagation()}
                        onTouchStart={(e) => e.stopPropagation()}
                        onDragStart={(e) => e.preventDefault()}
                        onDrag={(e) => e.preventDefault()}
                        data-no-drag="true"
                        className={`flex flex-col items-center gap-1 p-2 sm:p-3 backdrop-blur-sm rounded-2xl border transition-all duration-200 shadow-lg hover:scale-110 ${
                          isLiked
                            ? 'bg-red-500/80 border-red-400/50 text-white'
                            : 'bg-black/40 border-white/20 text-white hover:bg-black/60'
                        }`}
                        style={{ touchAction: 'none' }}
                      >
                        <Heart className={`w-6 h-6 sm:w-7 sm:h-7 ${isLiked ? 'fill-current' : ''}`} />
                        <span className="text-xs font-medium">{likeCount}</span>
                      </button>

                      {/* –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ */}
                      <button
                        onClick={(e) => {
                          e.stopPropagation()
                          e.preventDefault()
                          onOpenComments(review)
                        }}
                        onMouseDown={(e) => e.stopPropagation()}
                        onTouchStart={(e) => e.stopPropagation()}
                        onDragStart={(e) => e.preventDefault()}
                        onDrag={(e) => e.preventDefault()}
                        data-no-drag="true"
                        className="flex flex-col items-center gap-1 p-2 sm:p-3 bg-black/40 backdrop-blur-sm rounded-2xl border border-white/20 text-white hover:bg-black/60 hover:scale-110 transition-all duration-200 shadow-lg"
                        style={{ touchAction: 'none' }}
                      >
                        <MessageCircle className="w-6 h-6 sm:w-7 sm:h-7" />
                        <span className="text-xs font-medium">{review.comments?.length || 0}</span>
                      </button>

                      {/* –ü–æ–¥–µ–ª–∏—Ç—å—Å—è */}
                      <button
                        onClick={(e) => {
                          e.stopPropagation()
                          e.preventDefault()
                          handleShareReview()
                        }}
                        onMouseDown={(e) => e.stopPropagation()}
                        onTouchStart={(e) => e.stopPropagation()}
                        onDragStart={(e) => e.preventDefault()}
                        onDrag={(e) => e.preventDefault()}
                        data-no-drag="true"
                        className="flex flex-col items-center justify-center p-2 sm:p-3 bg-black/40 backdrop-blur-sm rounded-2xl border border-white/20 text-white hover:bg-black/60 hover:scale-110 transition-all duration-200 shadow-lg w-12 h-12 sm:w-14 sm:h-14"
                        style={{ touchAction: 'none' }}
                      >
                        <Share2 className="w-6 h-6 sm:w-7 sm:h-7" />
                      </button>
                    </>
                  )
                )}
              </div>
            </motion.div>
          </motion.div>
        )}
      </AnimatePresence>

      {/* –ú–µ–Ω—é –ø–æ–¥–µ–ª–∏—Ç—å—Å—è */}
      <AnimatePresence>
        {/* Removed isShareMenuOpen and its related modal */}
      </AnimatePresence>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –ø–æ–ª–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º –æ—Ç–∑—ã–≤–∞ */}
      <AnimatePresence>
        {showFullTextModal && (
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            className="fixed inset-0 z-60 bg-black/50 flex items-end"
            onClick={() => setShowFullTextModal(false)}
          >
            <motion.div
              initial={{ y: '100%' }}
              animate={{ y: 0 }}
              exit={{ y: '100%' }}
              transition={{ type: 'spring', damping: 25, stiffness: 300 }}
              drag="y"
              dragConstraints={{ top: 0, bottom: 0 }}
              dragElastic={0.1}
              onDragEnd={(event, info) => {
                if (info.offset.y > 100) {
                  setShowFullTextModal(false)
                }
              }}
              className="w-full bg-white dark:bg-gray-800 rounded-t-3xl max-h-[80vh] overflow-hidden"
              onClick={(e) => e.stopPropagation()}
            >
              {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
              <div className="sticky top-0 bg-white dark:bg-gray-800 px-6 py-4 border-b border-gray-200 dark:border-gray-700">
                <div className="flex items-center justify-between mb-2">
                  <div className="flex items-center gap-2">
                    <div className="w-8 h-8 bg-gray-200 dark:bg-gray-700 rounded-full flex items-center justify-center overflow-hidden">
                      {review.user?.image_url ? (
                        <img
                          src={review.user.image_url}
                          alt="Profile"
                          className="w-full h-full object-cover"
                        />
                      ) : (
                        <span className="text-sm font-medium text-gray-600 dark:text-gray-400">
                          {review.user?.first_name?.[0] || review.user?.last_name?.[0] || review.user?.email?.[0] || 'U'}
                        </span>
                      )}
                    </div>
                    <div>
                      <h2 className="text-base font-semibold text-gray-900 dark:text-white">
                        {review.user?.first_name && review.user?.last_name 
                          ? `${review.user.first_name} ${review.user.last_name}` 
                          : review.user?.email}
                      </h2>
                      <p className="text-xs text-gray-600 dark:text-gray-400">
                        {formatDistanceToNow(new Date(review.created_at), { 
                          addSuffix: true, 
                          locale: ru 
                        })}
                      </p>
                    </div>
                  </div>
                  <button
                    onClick={() => setShowFullTextModal(false)}
                    className="p-1 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 rounded-lg hover:bg-gray-200 dark:hover:bg-gray-700"
                  >
                    <X className="w-4 h-4" />
                  </button>
                </div>

                {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å–≤–∞–π–ø–∞ */}
                <div className="flex justify-center">
                  <div className="w-12 h-1 bg-gray-300 dark:bg-gray-600 rounded-full" />
                </div>
                <p className="text-center text-xs text-gray-500 mt-2">
                  –°–≤–∞–π–ø –≤–Ω–∏–∑ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è
                </p>
              </div>

              {/* –ü–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞ */}
              <div className="px-6 py-4 overflow-y-auto max-h-[calc(80vh-120px)]">
                <p className="text-gray-900 dark:text-white text-base leading-relaxed break-words">
                  {review.text}
                </p>
              </div>
            </motion.div>
          </motion.div>
        )}
      </AnimatePresence>

      {/* –ê–Ω–∏–º–∞—Ü–∏—è —Å–µ—Ä–¥—Ü–∞ –¥–ª—è –¥–≤–æ–π–Ω—ã—Ö —Ç–∞–ø–æ–≤ */}
      <AnimatePresence>
        {showHeartAnimation && (
          <motion.div
            initial={{ scale: 0, opacity: 0 }}
            animate={{ scale: 1.2, opacity: 1 }}
            exit={{ scale: 0, opacity: 0 }}
            transition={{ duration: 0.3 }}
            className="fixed z-70 pointer-events-none"
            style={{
              left: heartPosition.x,
              top: heartPosition.y,
              transform: 'translate(-50%, -50%)'
            }}
          >
            <Heart className="w-16 h-16 text-red-500 fill-current drop-shadow-lg" />
          </motion.div>
        )}
      </AnimatePresence>

    </>
  )
} 
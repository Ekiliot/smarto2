'use client'

import { useState, useEffect } from 'react'
import { motion, AnimatePresence } from 'framer-motion'
import { 
  Package, 
  Calendar, 
  MapPin, 
  CreditCard, 
  Eye, 
  Loader2,
  ArrowLeft,
  CheckCircle,
  Clock,
  Truck,
  XCircle,
  User,
  ShoppingCart,
  RotateCcw
} from 'lucide-react'
import { Header } from '@/components/Header'
import { useAuth } from '@/components/AuthProvider'
import { getUserOrders, Order } from '@/lib/supabase'
import { formatPrice } from '@/lib/utils'
import Link from 'next/link'
import { useNavbarVisibility } from '@/components/NavbarVisibilityProvider'

const statusConfig = {
  pending: {
    label: '–û–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è',
    color: 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/20 dark:text-yellow-400',
    icon: Clock
  },
  confirmed: {
    label: '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω',
    color: 'bg-blue-100 text-blue-800 dark:bg-blue-900/20 dark:text-blue-400',
    icon: CheckCircle
  },
  processing: {
    label: '–í –æ–±—Ä–∞–±–æ—Ç–∫–µ',
    color: 'bg-purple-100 text-purple-800 dark:bg-purple-900/20 dark:text-purple-400',
    icon: Package
  },
  shipped: {
    label: '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω',
    color: 'bg-indigo-100 text-indigo-800 dark:bg-indigo-900/20 dark:text-indigo-400',
    icon: Truck
  },
  delivered: {
    label: '–î–æ—Å—Ç–∞–≤–ª–µ–Ω',
    color: 'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-400',
    icon: CheckCircle
  },
  cancelled: {
    label: '–û—Ç–º–µ–Ω–µ–Ω',
    color: 'bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-400',
    icon: XCircle
  },
  refunded: {
    label: '–í–æ–∑–≤—Ä–∞—Ç',
    color: 'bg-gray-100 text-gray-800 dark:bg-gray-900/20 dark:text-gray-400',
    icon: RotateCcw
  }
}

const paymentStatusConfig = {
  pending: {
    label: '–û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã',
    color: 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/20 dark:text-yellow-400'
  },
  paid: {
    label: '–û–ø–ª–∞—á–µ–Ω',
    color: 'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-400'
  },
  failed: {
    label: '–û—à–∏–±–∫–∞ –æ–ø–ª–∞—Ç—ã',
    color: 'bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-400'
  },
  refunded: {
    label: '–í–æ–∑–≤—Ä–∞—â–µ–Ω',
    color: 'bg-gray-100 text-gray-800 dark:bg-gray-900/20 dark:text-gray-400'
  }
}

export default function UserOrdersPage() {
  const { user } = useAuth()
  const { hideNavbar, showNavbar } = useNavbarVisibility()
  const [orders, setOrders] = useState<Order[]>([])
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState('')
  const [selectedOrder, setSelectedOrder] = useState<Order | null>(null)
  const [showOrderModal, setShowOrderModal] = useState(false)

  // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∫—Ä–æ–ª–ª–æ–º body –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏/–∑–∞–∫—Ä—ã—Ç–∏–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  useEffect(() => {
    if (showOrderModal) {
      // –ë–ª–æ–∫–∏—Ä—É–µ–º —Å–∫—Ä–æ–ª–ª body –∏ —Å–∫—Ä—ã–≤–∞–µ–º –Ω–∞–≤–±–∞—Ä
      document.body.style.overflow = 'hidden'
      hideNavbar()
    } else {
      // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∫—Ä–æ–ª–ª body –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞–≤–±–∞—Ä
      document.body.style.overflow = ''
      showNavbar()
    }
  }, [showOrderModal, hideNavbar, showNavbar])

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –∑–∞–∫–∞–∑—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  useEffect(() => {
    const loadOrders = async () => {
      if (!user) return

      try {
        setLoading(true)
        const { data, error } = await getUserOrders(user.id)
        
        if (error) {
          console.error('Error loading orders:', error)
          setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–∫–∞–∑–æ–≤')
        } else {
          setOrders(data || [])
        }
      } catch (err) {
        console.error('Orders load error:', err)
        setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–∫–∞–∑–æ–≤')
      } finally {
        setLoading(false)
      }
    }

    loadOrders()
  }, [user])

  const formatDate = (dateString: string) => {
    return new Date(dateString).toLocaleDateString('ru-RU', {
      year: 'numeric',
      month: 'long',
      day: 'numeric',
      hour: '2-digit',
      minute: '2-digit'
    })
  }

  const getTotalItems = (order: Order) => {
    return order.order_items?.reduce((sum, item) => sum + item.quantity, 0) || 0
  }

  // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
  if (!user) {
    return (
      <div className="min-h-screen bg-gray-50 dark:bg-gray-900">
        <Header />
        <main className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
          <div className="flex flex-col items-center justify-center py-12">
            <Package className="h-16 w-16 text-gray-400 mb-4" />
            <h1 className="text-2xl font-bold text-gray-900 dark:text-white mb-2">
              –í–æ–π–¥–∏—Ç–µ –≤ –∞–∫–∫–∞—É–Ω—Ç
            </h1>
            <p className="text-gray-600 dark:text-gray-400 mb-6 text-center">
              –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–∫–∞–∑–æ–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç
            </p>
            <Link
              href="/login"
              className="px-6 py-3 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors"
            >
              –í–æ–π—Ç–∏
            </Link>
          </div>
        </main>
      </div>
    )
  }

  return (
    <div className="min-h-screen bg-gray-50 dark:bg-gray-900 mobile-nav-safe-area">
      <Header />
      
      {/* –ú–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è –∑–∞–∫–∞–∑–æ–≤ */}
      <div className="md:hidden">
        <main className="px-4 py-6 space-y-6">
          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            className="text-center"
          >
            <div className="flex items-center justify-center mb-4">
              <Link
                href="/account"
                className="flex items-center space-x-2 text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white transition-colors"
              >
                <ArrowLeft className="h-5 w-5" />
                <span className="text-sm">–ù–∞–∑–∞–¥</span>
              </Link>
            </div>
            <h1 className="text-2xl font-bold text-gray-900 dark:text-white mb-2">
              –ú–æ–∏ –∑–∞–∫–∞–∑—ã
            </h1>
            <p className="text-gray-600 dark:text-gray-400">
              –ò—Å—Ç–æ—Ä–∏—è –≤—Å–µ—Ö –≤–∞—à–∏—Ö –∑–∞–∫–∞–∑–æ–≤
            </p>
          </motion.div>

          {/* –ë–∞–Ω–Ω–µ—Ä —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π */}
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 0.1 }}
            className="bg-gradient-to-r from-blue-500 to-purple-600 rounded-2xl p-4 text-white"
          >
            <div className="flex items-center justify-between">
              <div>
                <h3 className="font-semibold text-lg">üì¶ –í–∞—à–∏ –∑–∞–∫–∞–∑—ã</h3>
                <p className="text-blue-100 text-sm">
                  {orders.length > 0 
                    ? `${orders.length} –∑–∞–∫–∞–∑–æ–≤ –≤ –∏—Å—Ç–æ—Ä–∏–∏` 
                    : '–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤'
                  }
                </p>
              </div>
              <div className="text-right">
                <div className="text-2xl font-bold">
                  {orders.length > 0 ? orders.length : '0'}
                </div>
                <div className="text-blue-100 text-sm">–í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤</div>
              </div>
            </div>
          </motion.div>

          {/* Content */}
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 0.2 }}
          >
            {loading ? (
              <div className="flex items-center justify-center py-12">
                <Loader2 className="h-8 w-8 text-primary-600 animate-spin mr-3" />
                <span className="text-gray-600 dark:text-gray-400">–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–∫–∞–∑–æ–≤...</span>
              </div>
            ) : error ? (
              <div className="bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-2xl p-6 text-center">
                <XCircle className="h-12 w-12 text-red-500 mx-auto mb-4" />
                <h3 className="text-lg font-semibold text-red-800 dark:text-red-200 mb-2">
                  –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏
                </h3>
                <p className="text-red-600 dark:text-red-300">{error}</p>
              </div>
            ) : orders.length === 0 ? (
              <div className="bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-8 text-center">
                <Package className="h-16 w-16 text-gray-400 mx-auto mb-4" />
                <h3 className="text-xl font-semibold text-gray-900 dark:text-white mb-2">
                  –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤
                </h3>
                <p className="text-gray-600 dark:text-gray-400 mb-6">
                  –°–¥–µ–ª–∞–π—Ç–µ —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –∑–∞–∫–∞–∑, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –µ–≥–æ –∑–¥–µ—Å—å
                </p>
                <Link
                  href="/products"
                  className="inline-flex items-center px-6 py-3 bg-primary-600 text-white font-semibold rounded-xl hover:bg-primary-700 transition-colors"
                >
                  –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ç–æ–≤–∞—Ä–∞–º
                </Link>
              </div>
            ) : (
              <div className="space-y-4">
                {orders.map((order, index) => {
                  const StatusIcon = statusConfig[order.status].icon
                  return (
                    <motion.div
                      key={order.id}
                      initial={{ opacity: 0, y: 20 }}
                      animate={{ opacity: 1, y: 0 }}
                      transition={{ delay: 0.3 + index * 0.1 }}
                      className="bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-4"
                    >
                      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∑–∞–∫–∞–∑–∞ */}
                      <div className="flex items-center justify-between mb-4">
                        <div className="flex items-center space-x-3">
                          <div className="w-12 h-12 bg-primary-100 dark:bg-primary-900 rounded-full flex items-center justify-center">
                            <Package className="h-6 w-6 text-primary-600" />
                          </div>
                          <div>
                            <h3 className="font-semibold text-gray-900 dark:text-white">
                              –ó–∞–∫–∞–∑ {order.order_number}
                            </h3>
                            <p className="text-sm text-gray-500 dark:text-gray-400">
                              {getTotalItems(order)} —Ç–æ–≤–∞—Ä–æ–≤
                            </p>
                          </div>
                        </div>
                        <motion.button
                          whileHover={{ scale: 1.05 }}
                          whileTap={{ scale: 0.95 }}
                          onClick={() => {
                            setSelectedOrder(order)
                            setShowOrderModal(true)
                          }}
                          className="p-3 bg-blue-100 hover:bg-blue-200 dark:bg-blue-900 dark:hover:bg-blue-800 text-blue-600 dark:text-blue-400 rounded-xl transition-colors"
                          title="–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–µ—Ç–∞–ª–∏"
                        >
                          <Eye className="h-5 w-5" />
                        </motion.button>
                      </div>

                      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ */}
                      <div className="space-y-3">
                        {/* –î–∞—Ç–∞ */}
                        <div className="flex items-center space-x-3 p-3 bg-gray-50 dark:bg-gray-700 rounded-xl">
                          <Calendar className="h-4 w-4 text-gray-400" />
                          <span className="text-sm text-gray-900 dark:text-white">
                            {formatDate(order.created_at)}
                          </span>
                        </div>

                        {/* –°—Ç–∞—Ç—É—Å */}
                        <div className="flex items-center space-x-3 p-3 bg-gray-50 dark:bg-gray-700 rounded-xl">
                          <StatusIcon className="h-4 w-4 text-gray-400" />
                          <span className={`inline-flex items-center px-2.5 py-1 rounded-full text-xs font-medium ${statusConfig[order.status].color}`}>
                            {statusConfig[order.status].label}
                          </span>
                        </div>

                        {/* –°—É–º–º–∞ –∏ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã */}
                        <div className="flex items-center space-x-3 p-3 bg-gray-50 dark:bg-gray-700 rounded-xl">
                          <CreditCard className="h-4 w-4 text-gray-400" />
                          <div className="flex-1">
                            <div className="text-sm font-semibold text-gray-900 dark:text-white">
                              {formatPrice(order.total_amount)}
                            </div>
                            <div className="text-xs text-gray-500 dark:text-gray-400">
                              {order.payment_method === 'cash' ? '–ù–∞–ª–∏—á–Ω—ã–µ' : '–ö–∞—Ä—Ç–∞'}
                            </div>
                          </div>
                        </div>

                        {/* –°—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã */}
                        <div className="flex items-center space-x-3 p-3 bg-gray-50 dark:bg-gray-700 rounded-xl">
                          <div className="w-4 h-4 rounded-full bg-gray-300"></div>
                          <span className={`inline-flex items-center px-2.5 py-1 rounded-full text-xs font-medium ${paymentStatusConfig[order.payment_status].color}`}>
                            {paymentStatusConfig[order.payment_status].label}
                          </span>
                        </div>
                      </div>
                    </motion.div>
                  )
                })}
              </div>
            )}
          </motion.div>

          {/* –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥ –≤ –∞–∫–∫–∞—É–Ω—Ç" */}
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 0.6 }}
            className="text-center"
          >
            <Link
              href="/account"
              className="inline-flex items-center space-x-2 px-6 py-3 text-gray-600 dark:text-gray-400 hover:text-primary-600 dark:hover:text-primary-400 transition-colors"
            >
              <ArrowLeft className="h-4 w-4" />
              <span>–ù–∞–∑–∞–¥ –≤ –∞–∫–∫–∞—É–Ω—Ç</span>
            </Link>
          </motion.div>
        </main>
      </div>

      {/* –î–µ—Å–∫—Ç–æ–ø–Ω–∞—è –≤–µ—Ä—Å–∏—è - –æ—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å */}
      <div className="hidden md:block">
        <main className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
          {/* Page Header */}
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            className="mb-8"
          >
            <div className="flex items-center space-x-4 mb-4">
              <Link
                href="/account"
                className="flex items-center space-x-2 text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white transition-colors"
              >
                <ArrowLeft className="h-5 w-5" />
                <span>–ù–∞–∑–∞–¥ –≤ –∞–∫–∫–∞—É–Ω—Ç</span>
              </Link>
            </div>
            <h1 className="text-3xl font-bold text-gray-900 dark:text-white mb-2">
              –ú–æ–∏ –∑–∞–∫–∞–∑—ã
            </h1>
            <p className="text-gray-600 dark:text-gray-400">
              –ò—Å—Ç–æ—Ä–∏—è –≤—Å–µ—Ö –≤–∞—à–∏—Ö –∑–∞–∫–∞–∑–æ–≤
            </p>
          </motion.div>

          {/* Content */}
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 0.1 }}
          >
            {loading ? (
              <div className="flex items-center justify-center py-12">
                <Loader2 className="h-8 w-8 text-primary-600 animate-spin mr-3" />
                <span className="text-gray-600 dark:text-gray-400">–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–∫–∞–∑–æ–≤...</span>
              </div>
            ) : error ? (
              <div className="bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg p-6 text-center">
                <XCircle className="h-12 w-12 text-red-500 mx-auto mb-4" />
                <h3 className="text-lg font-semibold text-red-800 dark:text-red-200 mb-2">
                  –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏
                </h3>
                <p className="text-red-600 dark:text-red-300">{error}</p>
              </div>
            ) : orders.length === 0 ? (
              <div className="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-12 text-center">
                <Package className="h-16 w-16 text-gray-400 mx-auto mb-4" />
                <h3 className="text-xl font-semibold text-gray-900 dark:text-white mb-2">
                  –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤
                </h3>
                <p className="text-gray-600 dark:text-gray-400 mb-6">
                  –°–¥–µ–ª–∞–π—Ç–µ —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –∑–∞–∫–∞–∑, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –µ–≥–æ –∑–¥–µ—Å—å
                </p>
                <Link
                  href="/products"
                  className="inline-flex items-center px-6 py-3 bg-primary-600 text-white font-semibold rounded-lg hover:bg-primary-700 transition-colors"
                >
                  –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ç–æ–≤–∞—Ä–∞–º
                </Link>
              </div>
            ) : (
              <div className="bg-white dark:bg-gray-800 rounded-xl shadow-lg overflow-hidden">
                <div className="overflow-x-auto">
                  <table className="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
                    <thead className="bg-gray-50 dark:bg-gray-700">
                      <tr>
                        <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">
                          –ó–∞–∫–∞–∑
                        </th>
                        <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">
                          –î–∞—Ç–∞
                        </th>
                        <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">
                          –°—Ç–∞—Ç—É—Å
                        </th>
                        <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">
                          –°—É–º–º–∞
                        </th>
                        <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">
                          –û–ø–ª–∞—Ç–∞
                        </th>
                        <th className="px-6 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">
                          –î–µ–π—Å—Ç–≤–∏—è
                        </th>
                      </tr>
                    </thead>
                    <tbody className="bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700">
                      <AnimatePresence>
                        {orders.map((order) => {
                          const StatusIcon = statusConfig[order.status].icon
                          return (
                            <motion.tr
                              key={order.id}
                              initial={{ opacity: 0, y: 20 }}
                              animate={{ opacity: 1, y: 0 }}
                              exit={{ opacity: 0, y: -20 }}
                              className="hover:bg-gray-50 dark:hover:bg-gray-700/50 transition-colors"
                            >
                              <td className="px-6 py-4 whitespace-nowrap">
                                <div className="flex items-center">
                                  <div className="w-10 h-10 bg-primary-100 dark:bg-primary-900 rounded-full flex items-center justify-center">
                                    <Package className="h-5 w-5 text-primary-600" />
                                  </div>
                                  <div className="ml-4">
                                    <div className="text-sm font-medium text-gray-900 dark:text-white">
                                      {order.order_number}
                                    </div>
                                    <div className="text-sm text-gray-500 dark:text-gray-400">
                                      {getTotalItems(order)} —Ç–æ–≤–∞—Ä–æ–≤
                                    </div>
                                  </div>
                                </div>
                              </td>
                              <td className="px-6 py-4 whitespace-nowrap">
                                <div className="flex items-center">
                                  <Calendar className="h-4 w-4 text-gray-400 mr-2" />
                                  <span className="text-sm text-gray-900 dark:text-white">
                                    {formatDate(order.created_at)}
                                  </span>
                                </div>
                              </td>
                              <td className="px-6 py-4 whitespace-nowrap">
                                <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${statusConfig[order.status].color}`}>
                                  <StatusIcon className="h-3 w-3 mr-1" />
                                  {statusConfig[order.status].label}
                                </span>
                              </td>
                              <td className="px-6 py-4 whitespace-nowrap">
                                <div className="text-sm font-semibold text-gray-900 dark:text-white">
                                  {formatPrice(order.total_amount)}
                                </div>
                                <div className="text-sm text-gray-500 dark:text-gray-400">
                                  {order.payment_method === 'cash' ? '–ù–∞–ª–∏—á–Ω—ã–µ' : '–ö–∞—Ä—Ç–∞'}
                                </div>
                              </td>
                              <td className="px-6 py-4 whitespace-nowrap">
                                <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${paymentStatusConfig[order.payment_status].color}`}>
                                  {paymentStatusConfig[order.payment_status].label}
                                </span>
                              </td>
                              <td className="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                                <motion.button
                                  whileHover={{ scale: 1.05 }}
                                  whileTap={{ scale: 0.95 }}
                                  onClick={() => {
                                    setSelectedOrder(order)
                                    setShowOrderModal(true)
                                  }}
                                  className="p-2 bg-blue-100 hover:bg-blue-200 dark:bg-blue-900 dark:hover:bg-blue-800 text-blue-600 dark:text-blue-400 rounded-lg transition-colors"
                                  title="–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–µ—Ç–∞–ª–∏"
                                >
                                  <Eye className="h-4 w-4" />
                                </motion.button>
                              </td>
                            </motion.tr>
                          )
                        })}
                      </AnimatePresence>
                    </tbody>
                  </table>
                </div>
              </div>
            )}
          </motion.div>
        </main>
      </div>

      {/* Order Details Modal */}
      <AnimatePresence>
        {showOrderModal && selectedOrder && (
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            className="fixed inset-0 z-50 bg-black/50 backdrop-blur-sm"
            onClick={() => setShowOrderModal(false)}
          >
            <motion.div
              initial={{ y: '100%' }}
              animate={{ y: 0 }}
              exit={{ y: '100%' }}
              transition={{ type: 'spring', damping: 25, stiffness: 300 }}
              className="absolute bottom-0 left-0 right-0 bg-white dark:bg-gray-900 rounded-t-3xl shadow-2xl max-h-[90vh] overflow-hidden"
              onClick={(e) => e.stopPropagation()}
              drag="y"
              dragConstraints={{ top: 0, bottom: 0 }}
              dragElastic={0.1}
              onDragEnd={(event, info) => {
                if (info.offset.y > 100) {
                  setShowOrderModal(false)
                }
              }}
              dragMomentum={false}
            >
              {/* Handle –¥–ª—è —Å–≤–∞–π–ø–∞ */}
              <div className="flex justify-center pt-3 pb-2">
                <div className="w-12 h-1 bg-gray-300 dark:bg-gray-600 rounded-full" />
              </div>

              {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
              <div className="px-6 py-4 border-b border-gray-200 dark:border-gray-700">
                <div className="flex items-center justify-between">
                  <div className="flex items-center space-x-3">
                    <div className="w-10 h-10 bg-blue-100 dark:bg-blue-900/20 rounded-full flex items-center justify-center">
                      <Package className="h-5 w-5 text-blue-600 dark:text-blue-400" />
                    </div>
                    <div>
                      <h2 className="text-xl font-bold text-gray-900 dark:text-white">
                        –ó–∞–∫–∞–∑ {selectedOrder.order_number}
                      </h2>
                      <p className="text-sm text-gray-600 dark:text-gray-400">
                        –î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞
                      </p>
                    </div>
                  </div>
                  <button
                    onClick={() => setShowOrderModal(false)}
                    className="p-2 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200 transition-colors"
                  >
                    <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
                    </svg>
                  </button>
                </div>
              </div>

              {/* –ö–æ–Ω—Ç–µ–Ω—Ç */}
              <div className="px-6 py-6 overflow-y-auto max-h-[calc(90vh-120px)]" style={{ overscrollBehavior: 'contain' }}>
                <div className="space-y-6">
                  {/* Order Info */}
                  <div className="space-y-4">
                    <h3 className="text-lg font-semibold text-gray-900 dark:text-white">
                      –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ
                    </h3>
                    <div className="space-y-3">
                      <div className="flex justify-between p-3 bg-gray-50 dark:bg-gray-700 rounded-xl">
                        <span className="text-gray-600 dark:text-gray-400">–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞:</span>
                        <span className="font-medium text-gray-900 dark:text-white">{selectedOrder.order_number}</span>
                      </div>
                      <div className="flex justify-between p-3 bg-gray-50 dark:bg-gray-700 rounded-xl">
                        <span className="text-gray-600 dark:text-gray-400">–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è:</span>
                        <span className="font-medium text-gray-900 dark:text-white">{formatDate(selectedOrder.created_at)}</span>
                      </div>
                      <div className="flex justify-between p-3 bg-gray-50 dark:bg-gray-700 rounded-xl">
                        <span className="text-gray-600 dark:text-gray-400">–°—Ç–∞—Ç—É—Å:</span>
                        <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${statusConfig[selectedOrder.status].color}`}>
                          {statusConfig[selectedOrder.status].label}
                        </span>
                      </div>
                      <div className="flex justify-between p-3 bg-gray-50 dark:bg-gray-700 rounded-xl">
                        <span className="text-gray-600 dark:text-gray-400">–û–ø–ª–∞—Ç–∞:</span>
                        <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${paymentStatusConfig[selectedOrder.payment_status].color}`}>
                          {paymentStatusConfig[selectedOrder.payment_status].label}
                        </span>
                      </div>
                    </div>
                  </div>

                  {/* Contact Info */}
                  <div className="space-y-4">
                    <h3 className="text-lg font-semibold text-gray-900 dark:text-white">
                      –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
                    </h3>
                    <div className="space-y-3">
                      <div className="flex justify-between p-3 bg-gray-50 dark:bg-gray-700 rounded-xl">
                        <span className="text-gray-600 dark:text-gray-400">–ò–º—è:</span>
                        <span className="font-medium text-gray-900 dark:text-white">
                          {selectedOrder.contact_info.first_name} {selectedOrder.contact_info.last_name}
                        </span>
                      </div>
                      <div className="flex justify-between p-3 bg-gray-50 dark:bg-gray-700 rounded-xl">
                        <span className="text-gray-600 dark:text-gray-400">Email:</span>
                        <span className="font-medium text-gray-900 dark:text-white">{selectedOrder.contact_info.email}</span>
                      </div>
                      <div className="flex justify-between p-3 bg-gray-50 dark:bg-gray-700 rounded-xl">
                        <span className="text-gray-600 dark:text-gray-400">–¢–µ–ª–µ—Ñ–æ–Ω:</span>
                        <span className="font-medium text-gray-900 dark:text-white">{selectedOrder.contact_info.phone}</span>
                      </div>
                    </div>
                  </div>

                  {/* Shipping Address */}
                  <div className="space-y-4">
                    <h3 className="text-lg font-semibold text-gray-900 dark:text-white flex items-center">
                      <MapPin className="h-5 w-5 mr-2" />
                      –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏
                    </h3>
                    <div className="bg-gray-50 dark:bg-gray-700 rounded-xl p-4 space-y-2">
                      <p className="text-sm text-gray-900 dark:text-white">
                        {selectedOrder.shipping_address.street}
                      </p>
                      <p className="text-sm text-gray-900 dark:text-white">
                        {selectedOrder.shipping_address.city}, {selectedOrder.shipping_address.postal_code}
                      </p>
                      <p className="text-sm text-gray-900 dark:text-white">
                        {selectedOrder.shipping_address.country}
                      </p>
                    </div>
                  </div>

                  {/* Order Items */}
                  <div className="space-y-4">
                    <h3 className="text-lg font-semibold text-gray-900 dark:text-white">
                      –¢–æ–≤–∞—Ä—ã –≤ –∑–∞–∫–∞–∑–µ
                    </h3>
                    <div className="space-y-3">
                      {selectedOrder.order_items?.map((item) => (
                        <div key={item.id} className="flex items-center space-x-4 p-3 bg-gray-50 dark:bg-gray-700 rounded-xl">
                          <div className="w-12 h-12 bg-gray-200 dark:bg-gray-600 rounded-lg flex items-center justify-center">
                            <Package className="h-6 w-6 text-gray-500" />
                          </div>
                          <div className="flex-1">
                            <h4 className="text-sm font-medium text-gray-900 dark:text-white">
                              {item.product?.name || '–¢–æ–≤–∞—Ä'}
                            </h4>
                            <p className="text-sm text-gray-500 dark:text-gray-400">
                              –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {item.quantity}
                            </p>
                          </div>
                          <div className="text-right">
                            <p className="text-sm font-medium text-gray-900 dark:text-white">
                              {formatPrice(item.unit_price)}
                            </p>
                            <p className="text-sm text-gray-500 dark:text-gray-400">
                              {formatPrice(item.total_price)}
                            </p>
                          </div>
                        </div>
                      ))}
                    </div>
                  </div>

                  {/* Total */}
                  <div className="border-t border-gray-200 dark:border-gray-700 pt-4">
                    <div className="flex justify-between items-center">
                      <span className="text-lg font-semibold text-gray-900 dark:text-white">
                        –ò—Ç–æ–≥–æ:
                      </span>
                      <span className="text-xl font-bold text-primary-600">
                        {formatPrice(selectedOrder.total_amount)}
                      </span>
                    </div>
                  </div>

                  {selectedOrder.notes && (
                    <div className="space-y-4">
                      <h3 className="text-lg font-semibold text-gray-900 dark:text-white">
                        –ü—Ä–∏–º–µ—á–∞–Ω–∏—è
                      </h3>
                      <div className="bg-gray-50 dark:bg-gray-700 rounded-xl p-4">
                        <p className="text-sm text-gray-900 dark:text-white">
                          {selectedOrder.notes}
                        </p>
                      </div>
                    </div>
                  )}
                </div>
              </div>
            </motion.div>
          </motion.div>
        )}
      </AnimatePresence>
    </div>
  )
} 